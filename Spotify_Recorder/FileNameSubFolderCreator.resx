<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NS0wNDowMOOGf9cAAAAASUVORK5CYII=
</value>
  </data>
</root>